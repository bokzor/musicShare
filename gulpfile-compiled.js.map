{"version":3,"sources":["gulpfile.js"],"names":[],"mappings":"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","file":"gulpfile-compiled.js","sourcesContent":["var gulp = require('gulp');\nvar gutil = require('gulp-util');\nvar gulpif = require('gulp-if');\nvar streamify = require('gulp-streamify');\nvar autoprefixer = require('gulp-autoprefixer');\nvar cssmin = require('gulp-cssmin');\nvar less = require('gulp-less');\nvar concat = require('gulp-concat');\nvar plumber = require('gulp-plumber');\nvar source = require('vinyl-source-stream');\nvar babelify = require('babelify');\nvar browserify = require('browserify');\nvar watchify = require('watchify');\nvar uglify = require('gulp-uglify');\n\nvar production = process.env.NODE_ENV === 'production';\n\nvar dependencies = [\n  'alt',\n  'react',\n  'react-dom',\n  'react-router',\n  'underscore'\n];\n\n/*\n |--------------------------------------------------------------------------\n | Combine all JS libraries into a single file for fewer HTTP requests.\n |--------------------------------------------------------------------------\n */\ngulp.task('vendor', function() {\n  return gulp.src([\n    'bower_components/jquery/dist/jquery.js',\n    'bower_components/bootstrap/dist/js/bootstrap.js',\n    'bower_components/magnific-popup/dist/jquery.magnific-popup.js',\n    'bower_components/toastr/toastr.js',\n    'app/lib/jquery.jplayer.min.js',\n    'app/lib/jplayer.playlist.min.js',\n    'app/lib/demo.js'\n  ]).pipe(concat('vendor.js'))\n    .pipe(gulpif(production, uglify({ mangle: false })))\n    .pipe(gulp.dest('public/js'));\n});\n\n/*\n |--------------------------------------------------------------------------\n | Compile third-party dependencies separately for faster performance.\n |--------------------------------------------------------------------------\n */\ngulp.task('browserify-vendor', function() {\n  return browserify()\n    .require(dependencies)\n    .bundle()\n    .pipe(source('vendor.bundle.js'))\n    .pipe(gulpif(production, streamify(uglify({ mangle: false }))))\n    .pipe(gulp.dest('public/js'));\n});\n\n/*\n |--------------------------------------------------------------------------\n | Compile only project files, excluding all third-party dependencies.\n |--------------------------------------------------------------------------\n */\ngulp.task('browserify', ['browserify-vendor'], function() {\n  return browserify('app/main.js')\n    .external(dependencies)\n    .transform(babelify)\n    .bundle()\n    .pipe(source('bundle.js'))\n    .pipe(gulpif(production, streamify(uglify({ mangle: false }))))\n    .pipe(gulp.dest('public/js'));\n});\n\n/*\n |--------------------------------------------------------------------------\n | Same as browserify task, but will also watch for changes and re-compile.\n |--------------------------------------------------------------------------\n */\ngulp.task('browserify-watch', ['browserify-vendor'], function() {\n  var bundler = watchify(browserify('app/main.js', watchify.args));\n  bundler.external(dependencies);\n  bundler.transform(babelify.configure({\n    optional: [\"es7.decorators\", \"runtime\"]\n  }));\n  bundler.on('update', rebundle);\n  return rebundle();\n\n  function rebundle() {\n    var start = Date.now();\n    return bundler.bundle()\n      .on('error', function(err) {\n        gutil.log(gutil.colors.red(err.toString()));\n      })\n      .on('end', function() {\n        gutil.log(gutil.colors.green('Finished rebundling in', (Date.now() - start) + 'ms.'));\n      })\n      .pipe(source('bundle.js'))\n      .pipe(gulp.dest('public/js/'));\n  }\n});\n\n/*\n |--------------------------------------------------------------------------\n | Compile LESS stylesheets.\n |--------------------------------------------------------------------------\n */\ngulp.task('styles', function() {\n  return gulp.src('app/stylesheets/main.less')\n    .pipe(plumber())\n    .pipe(less())\n    .pipe(autoprefixer())\n    .pipe(gulpif(production, cssmin()))\n    .pipe(gulp.dest('public/css'));\n});\n\ngulp.task('watch', function() {\n  gulp.watch('app/stylesheets/**/*.less', ['styles']);\n});\n\ngulp.task('default', ['styles', 'vendor', 'browserify-watch', 'watch']);\ngulp.task('build', ['styles', 'vendor', 'browserify']);"]}