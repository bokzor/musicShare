{"version":3,"sources":["apiRoutes.js"],"names":[],"mappings":"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","file":"apiRoutes-compiled.js","sourcesContent":["const express = require('express');\nconst jwt = require('jsonwebtoken');\nconst _ = require('lodash');\nconst aws = require('../aws/aws');\n\n\nconst User = require('../models/user');\nconst Music = require('../models/music').model;\n\nconst config = require('../config');\n\n// get an instance of the router for api routes\nconst apiRoutes = express.Router();\n\napiRoutes.get('/testAWS', (req, res) => {\n  console.log('call /api/testAWS');\n  aws.signToAWS();\n});\n\n// route to create a new user\napiRoutes.post('/signup', (req, res, next) => {\n  const username = req.body.username;\n  const email = req.body.email;\n  const password = req.body.password;\n\n  const newUser = new User({\n    username: username,\n    email: email,\n    password: password\n  });\n\n  newUser.save(function (err) {\n    if (err) return next(err);\n    // we create a new token\n    const token = jwt.sign({user: {username: newUser.username}}, config.secretToken, {\n      expiresIn: 1440 * 60 // expires in 24 hours\n    });\n\n    // let's fetch it to get the expires param\n    const decoded = jwt.decode(token);\n\n    res.status(201).send({\n      message: 'Registration Successfull',\n      token: token,\n      user: {id: newUser.id, username: newUser.username},\n      expires: decoded.exp\n    });\n\n  })\n});\n\n// route to authenticate an user. Return a token\napiRoutes.post('/auth', (req, res) => {\n  const email = req.body.email;\n  const password = req.body.password;\n\n  // find the user\n  User.findOne({\n    email: email\n  }, function (err, user) {\n    if (err) throw err;\n\n    if (!user) {\n      res.status(404).json({success: false, message: 'Authentication failed. User not found.'});\n\n    } else if (user) {\n      // test a matching password\n      user.comparePassword(password, function (err, isMatch) {\n        if (err) throw err;\n        if (!isMatch) {\n          res.status(401).json({success: false, message: 'Authentication failed. Wrong password.'});\n        } else {\n          // if user is found and password is right\n          // create a token\n          const token = jwt.sign({user: {username: user.username, id: user.id}}, config.secretToken, {\n            expiresIn: 86400 // expires in 24 hours\n          });\n          const decoded = jwt.decode(token);\n\n          // return the information including token as JSON\n          res.json({\n            success: true,\n            message: 'Welcome ' + user.username,\n            user: {id: user.id, username: user.username},\n            token: token,\n            expires: decoded.exp\n          });\n        }\n      });\n    }\n  });\n\n});\n\n// route middleware to verify a token\napiRoutes.use((req, res, next) => {\n\n  // check header or url parameters or post parameters for token\n  var token = req.body.token || req.query.token || req.headers['x-xsrf-token'];\n\n  // decode token\n  if (token) {\n\n    // verifies secret and checks exp\n    jwt.verify(token, config.secretToken, function (err, decoded) {\n      if (err) {\n        return res.json({success: false, message: 'Failed to authenticate token.'});\n      } else {\n        // if everything is good, save to request for use in other routes\n        req.decoded = decoded;\n        next();\n      }\n    });\n\n  } else {\n    // if there is no token\n    // return an error\n    return res.status(403).send({\n      success: false,\n      message: 'No token provided.'\n    });\n  }\n});\n\napiRoutes.post('/addMusic', (req, res) => {\n  let music = new Music();\n  music.name = req.body.music.completeName;\n  music.title = req.body.music.title;\n  music.artist = req.body.music.artist;\n  music.img = req.body.music.image;\n  music.isMix = req.body.music.isMix;\n  music.duration = req.body.music.duration;\n  music.url = req.body.music.url;\n  music.genres = req.body.music.genres;\n  music.hostType = req.body.music.hostType;\n  music.tags = req.body.music.tags;\n\n  music.userId = req.decoded.user.id;\n\n  music.save(err => {\n    if (err) {\n      res.status(400).json({\n        success: 'false',\n        error: err\n      });\n    } else {\n      res.status(201).json({\n        message: 'Music added',\n        success: 'true'\n      });\n    }\n  })\n\n\n});\n\n\n// use in Profile component\napiRoutes.get('/profile/:username', function (req, res) {\n\n  var followed = false;\n\n  User.findOne({username: req.params.username}, '_id username followedBy followedByCount profilePicture coverPicture')\n    .exec((err, user) => {\n      if (err) {\n        res.status(400).json({\n          success: 'false',\n          error: err\n        });\n      }\n\n      if (user) {\n        Music.find({userId: user.id})\n          .sort({'createdAt': -1})\n          .limit(1000)\n\n          .exec((err, musics) => {\n            if(user.followedBy.indexOf(req.decoded.user.id) > -1)\n              followed = true;\n\n            var newUser = {\n              followed: followed,\n              user,\n              musics: musics\n            };\n\n            res.send(newUser);\n          });\n      }\n    });\n});\n\napiRoutes.post('/follow', (req, res) => {\n  const toFollow = req.body.username;\n\n  User.findOne(req.decoded.user.id, 'followingCount following')\n    .exec((err, currentUser) => {\n      if (currentUser) {\n        User.findOne({username: toFollow}, 'followedByCount followedBy')\n          .exec((err, user) => {\n            if (user) {\n\n              currentUser.followingCount++;\n              currentUser.following.addToSet(user);\n              currentUser.save();\n\n              user.followedByCount++;\n              user.followedBy.addToSet(currentUser);\n              user.save();\n\n              res.send(currentUser);\n            }\n          });\n      }\n    });\n});\n\n\n\napiRoutes.post('/unfollow', (req, res) => {\n  const toFollow = req.body.username;\n\n  User.findOne(req.decoded.user.id, 'followingCount following')\n    .exec((err, currentUser) => {\n      if (currentUser) {\n\n        User.findOne({username: toFollow}, 'followedByCount followedBy')\n          .exec((err, user) => {\n            if (user) {\n\n              currentUser.followingCount--;\n              currentUser.following.remove(user);\n              currentUser.save();\n\n              user.followedByCount--;\n              user.followedBy.remove(currentUser);\n              user.save();\n\n              res.send(currentUser);\n            }\n          });\n      }\n    });\n});\n\n\n\napiRoutes.get('/test', (req, res) => {\n\n  for (var i = 0; i < 1000; i++) {\n    let music = new Music();\n    music.name = 'Maceo Plex Boiler Room Berlin DJ Set';\n    music.title = 'Maceo Plex Boiler Room Berlin DJ Set';\n    music.artist = 'Maceo';\n    music.img = 'https://i.ytimg.com/vi/5vHRUsP20dQ/sddefault.jpg'\n    music.isMix = true;\n    music.duration = 200000;\n    music.url = 'https://youtu.be/v/5vHRUsP20dQ';\n    music.genres = ['Techno'];\n    music.hostType = 'soudncloud';\n\n    music.userId = req.decoded.user.id;\n\n    music.save();\n  }\n\n\n  /*  User.findOne({username: 'bokzor'}, 'following username')\n   .then(userAdri => {\n\n   User.findOne({username: 'max'}, 'following username')\n   .then(user => {\n   userAdri.following.push(user);\n   });\n\n   User.findOne({username: 'maxime'}, 'following username')\n   .then(user => {\n   userAdri.following.push(user);\n   userAdri.save();\n   });\n   });*/\n});\n\n/*apiRoutes.get('/friends', (req, res) => {\n  User\n    .findById(req.decoded.user.id, 'following username')\n    .populate('following', 'username')\n    .exec(function (err, user) {\n      res.send(user);\n    });\n});*/\n\napiRoutes.get('/musicSearch', (req, res) => {\n  let pattern = req.query.search;\n  User\n    .findById(req.decoded.user.id, 'following username')\n    .exec(function (err, user) {\n\n      console.log(user);\n      Music.find({\n          $and: [\n            {userId: {$in: user.following}},\n            {name: {$regex: pattern, $options: \"i\"}}\n          ]\n        })\n        .sort({createdAt: -1})\n        .limit(30).exec((err, musics) => {\n        res.send(musics);\n      })\n    });\n});\n\napiRoutes.get('/discover', (req, res) => {\n  User\n    .findById(req.decoded.user.id, 'following username')\n    .exec(function (err, user) {\n      Music.find({userId: {$in: user.following}})\n        .sort({createdAt: -1})\n        .limit(200).exec((err, musics) => {\n        res.send(musics);\n      })\n    });\n});\n\napiRoutes.get('/userSearch', (req, res) => {\n  User\n    .find({username: new RegExp(req.query.search, \"i\")}, 'username').limit(5)\n    .exec((err, users) => {\n      res.send(users);\n    });\n});\n\n\napiRoutes.get('/genreMusics', (req, res) => {\n  const genre = req.query.genre;\n  User\n    .findById(req.decoded.user.id, 'following username')\n    .exec(function (err, user) {\n      Music.find({\n          $and: [\n            {userId: {$in: user.following}},\n            {genres: genre}\n          ]\n        })\n        .sort({createdAt: -1})\n        .limit(200).exec((err, musics) => {\n        res.send(musics);\n      })\n    });\n});\n\napiRoutes.post('/uploadPictureOnAWS', (req, res) => {\n  /*console.log('APIROUTES /uploadProfilePictureOnAWS - req.body.filename: ' + req.body.filename\n    + ' req.body.filetype: ' + req.body.filetype);*/\n  const filename = req.body.filename;\n  const filetype = req.body.filetype;\n  console.log('call /api/uploadProfilePictureOnAWS');\n  aws.signAndUploadToAWS(filename, filetype, function(result) {\n    res.send(result);\n  });\n});\n\napiRoutes.put('/updatePicture', (req, res) => {\n  const id = req.body.id;\n  const filename = req.body.filename;\n  const text = req.body.text;\n  User\n    .findById(id, function (err, user) {\n      if (err) return handleError(err);\n      if (text === 'profile')\n        user.profilePicture = filename;\n      if (text === 'cover')\n        user.coverPicture = filename;\n      user.save(function (err) {\n        if (err) return handleError(err);\n        res.send(user);\n      });\n    });\n});\n\nexport default apiRoutes;"]}