{"version":3,"sources":["AuthStore.js"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,WAAW,MAAM,wBAAwB,CAAA;AAChD,OAAO,MAAM,MAAM,cAAc,CAAC;;AAElC,MAAM,SAAS,CAAC;AACd,aAAW,GAAG;AACZ,QAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AAC9B,QAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,QAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACd,QAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACf,QAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;GACpB;;AAGD,gBAAc,CAAC,QAAQ,EAAE;AACvB,QAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AAC/B,QAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/B,QAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AACnC,UAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACtC,UAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,UAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACzC;;AAED,aAAW,CAAC,QAAQ,EAAE;AACpB,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AACrB,UAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACrC;;AAED,iBAAe,CAAC,QAAQ,EAAE;AACxB,QAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AAC/B,QAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/B,QAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AACnC,UAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACtC,UAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,UAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACzC;;AAED,cAAY,CAAC,QAAQ,EAAE;AACrB,UAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACrC;CACF;;AAED,eAAe,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA","file":"AuthStore-compiled.js","sourcesContent":["import alt from '../alt'\nimport AuthActions from '../actions/AuthActions'\nimport cookie from 'react-cookie';\n\nclass AuthStore {\n  constructor() {\n    this.bindActions(AuthActions);\n    this.login = {};\n    this.jwt = '';\n    this.user = {};\n    this.canSubmit = false;\n    this.username = '';\n  }\n\n\n  onLoginSuccess(response) {\n    this.jwt = response.data.token;\n    this.user = response.data.user;\n    this.username = this.user.username;\n    toastr.success(response.data.message);\n    cookie.save('XSRF-TOKEN', this.jwt);\n    cookie.save('user', response.data.user);\n  }\n\n  onLoginFail(response) {\n    console.log(response)\n    toastr.error(response.data.message);\n  }\n\n  onSignupSuccess(response) {\n    this.jwt = response.data.token;\n    this.user = response.data.user;\n    this.username = this.user.username;\n    toastr.success(response.data.message);\n    cookie.save('XSRF-TOKEN', this.jwt);\n    cookie.save('user', response.data.user);\n  }\n\n  onSignupFail(response) {\n    toastr.error(response.data.message);\n  }\n}\n\nexport default alt.createStore(AuthStore)"]}